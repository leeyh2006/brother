<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link href='http://fonts.googleapis.com/css?family=Montserrat:400,700' rel='stylesheet' type='text/css'>
    <link href="/assets/css/test.css" rel="stylesheet" type="text/css">
</head>
<body ng-app="app">
</br></br></br>
<div>
    <table class="table table-hover">
        <div style="text-align: right">
            <input type ="text" ng-model="searchText"/>
            <button type="button" class="btn" ng-click="search(searchText)">검색</button>
        </div>
        <thead>
        <tr>
            <th scope="col">NO</th>
            <th scope="col">제목</th>
            <th scope="col">내용</th>
            <th scope="col">이름</th>
        </tr>
        </thead>
        <tbody>
        <tr ng-repeat="list in boardList">
            <input type="hidden" value={{list.num}}/>
            <td> {{list.ROWNUM }}</td>
            <td>
                <button type="button" id="detail" data-toggle="modal"
                        data-target="#boardDetail" ng-click="selectBoardDetail(list.num)" class="btn btn-link" >
                    {{list.title}}
                </button>
            </td>
            <td>{{list.content}}</td>
            <td>{{list.name}}</td>
        </tr>
        <!-- Modal -->
        <div class="modal fade" id="boardDetail" tabindex="-1" role="dialog" aria-labelledby="boardDetailTitle" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="boardDetailTitle" >상세보기</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div class="modal-body">
                        <div class="form-group">
                            <label for="title">제목</label>
                            <input type="text" class="form-control" id="userName" ng-model="board.title"/>
                        </div>
                        <div class="form-group">
                            <label for="name">작성자</label>
                            <input type="text" class="form-control" id="userName" readonly ng-model="board.userName"/>
                        </div>
                        <div class="form-group">
                            <label for="content">내용</label>
                            <textarea class="form-control" id="userName" ng-model="board.content"/>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">닫기</button>
                        <button type="button" class="btn btn-primary" ng-model ="board.boardNum" ng-click =updateBoard(board.boardNum)>수정</button>
                        <button type="button" id="modal" class="btn btn-danger" ng-model="board.boardNum" ng-click="modal = deleteBoard(board.boardNum)" data-dismiss="modal">삭제</button>
                    </div>
                </div>
            </div>
        </div>
        </tbody>
    </table>
    <nav aria-label="...">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1">Previous</a>
            </li>
            <li class="page-item" ng-repeat="i in count(totalCount) track by $index"  >
                <button class="page-link" ng-click="pageNavigation($index+1)">{{$index+1}}</button>
            </li>
            <!--  <li class="page-item active">
                <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
            </li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            -->
            <li class="page-item">
                <button class="page-link" ng-click="pageNavigation($index)">Next</button>
            </li>
        </ul>
    </nav>
    <div style="text-align: left">
        <a href="#!boardInsert" class="btn btn-primary">글쓰기</a>
        <a href="#!boardDelete" class="btn btn-danger">삭제</a>
    </div>
</div>

<!--
<div ng-app="app">
    <div ng-controller="ExampleController as vm" class="container">
        <div class="text-center">
            <h1>AngularJS - Pagination Example with logic like Google</h1>

            &lt;!&ndash; items being paged &ndash;&gt;
            <div ng-repeat="item in vm.items">Item {{item}}</div>

            &lt;!&ndash; pager &ndash;&gt;
            <ul ng-if="vm.pager.pages.length" class="pagination">
                <li ng-class="{disabled:vm.pager.currentPage === 1}">
                    <a ng-click="vm.setPage(1)">First</a>
                </li>
                <li ng-class="{disabled:vm.pager.currentPage === 1}">
                    <a ng-click="vm.setPage(vm.pager.currentPage - 1)">Previous</a>
                </li>
                <li ng-repeat="page in vm.pager.pages" ng-class="{active:vm.pager.currentPage === page}">
                    <a ng-click="vm.setPage(page)">{{page}}</a>
                </li>
                <li ng-class="{disabled:vm.pager.currentPage === vm.pager.totalPages}">
                    <a ng-click="vm.setPage(vm.pager.currentPage + 1)">Next</a>
                </li>
                <li ng-class="{disabled:vm.pager.currentPage === vm.pager.totalPages}">
                    <a ng-click="vm.setPage(vm.pager.totalPages)">Last</a>
                </li>
            </ul>
        </div>
    </div>
    <hr />


    </div>-->
</div>
<script type="text/javascript">
    (function() {
        'use strict';

       app
            .factory('PagerService', PagerService)
            .controller('ExampleController', ExampleController);

        function ExampleController(PagerService) {
            var vm = this;

            vm.dummyItems = _.range(1, 151); // dummy array of items to be paged
            vm.pager = {};
            vm.setPage = setPage;

            initController();

            function initController() {
                // initialize to page 1
                vm.setPage(1);
            }

            function setPage(page) {
                if (page < 1 || page > vm.pager.totalPages) {
                    return;
                }

                // get pager object from service
                vm.pager = PagerService.GetPager(vm.dummyItems.length, page);

                // get current page of items
                vm.items = vm.dummyItems.slice(vm.pager.startIndex, vm.pager.endIndex + 1);
            }
        }

        function PagerService() {
            // service definition
            var service = {};

            service.GetPager = GetPager;

            return service;

            // service implementation
            function GetPager(totalItems, currentPage, pageSize) {
                // default to first page
                currentPage = currentPage || 1;

                // default page size is 10
                pageSize = pageSize || 10;

                // calculate total pages
                var totalPages = Math.ceil(totalItems / pageSize);

                var startPage, endPage;
                if (totalPages <= 10) {
                    // less than 10 total pages so show all
                    startPage = 1;
                    endPage = totalPages;
                } else {
                    // more than 10 total pages so calculate start and end pages
                    if (currentPage <= 6) {
                        startPage = 1;
                        endPage = 10;
                    } else if (currentPage + 4 >= totalPages) {
                        startPage = totalPages - 9;
                        endPage = totalPages;
                    } else {
                        startPage = currentPage - 5;
                        endPage = currentPage + 4;
                    }
                }

                // calculate start and end item indexes
                var startIndex = (currentPage - 1) * pageSize;
                var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);

                // create an array of pages to ng-repeat in the pager control
                var pages = _.range(startPage, endPage + 1);

                // return object with all pager properties required by the view
                return {
                    totalItems: totalItems,
                    currentPage: currentPage,
                    pageSize: pageSize,
                    totalPages: totalPages,
                    startPage: startPage,
                    endPage: endPage,
                    startIndex: startIndex,
                    endIndex: endIndex,
                    pages: pages
                };
            }
        }
    })();
</script>
</body>
</html>
